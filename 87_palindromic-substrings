// https://leetcode.com/problems/palindromic-substrings/

class Solution
{
public:
    int n;

    int dp[1001][1001];
    bool is_palindrome(int i, int j, string s)
    {
        if (i >= j)
        {
            return true;
        }

        if (dp[i][j] != -1)
        {
            return dp[i][j];
        }

        if (s[i] == s[j])
        {
            return dp[i][j] = is_palindrome(i + 1, j - 1, s);
        }

        return dp[i][j] = false;
    }
    int countSubstrings(string s)
    {
        n = s.size();

        int count = 0;
        memset(dp, -1, sizeof(dp));
        for (int i = 0; i < n; ++i)
        {
            for (int j = i; j < n; ++j)
            {
                if (is_palindrome(i, j, s) == true)
                    count++;
            }
        }
        return count;
    }
};
