// https://leetcode.com/problems/solving-questions-with-brainpower/description/

#define ll long long

class Solution {
public:
    int n ;

    ll f(int ind , vector<vector<int>>& questions , vector<ll> &dp)
    {
        if(ind >= n)
        {
            return 0 ;
        }

        if(dp[ind] != -1)
        {
            return dp[ind] ;
        }

        ll take = f(ind+1 + questions[ind][1] , questions , dp) + questions[ind][0] ;

        ll not_take = f(ind+1 , questions , dp) ;

        return dp[ind] = max(take , not_take) ;

    }
    long long mostPoints(vector<vector<int>>& questions) {
        n = questions.size() ;

        vector<ll> dp(n , -1) ;

        return f(0 , questions , dp) ;
    }
};
